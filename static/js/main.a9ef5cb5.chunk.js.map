{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","classNames","completed","title","TodoList","todos","map","username","titlePattern","generateNewId","Math","max","getUserById","userIdToFind","usersFromServer","find","todosWithUser","userId","App","useState","setTodos","newTitle","setNewTitle","selectedUserId","setSelectedUserId","hasTitleError","setHasTitleError","hasUserError","setHasUserError","action","method","onSubmit","event","preventDefault","normalizedTitle","trim","currentTodos","newTodo","htmlFor","placeholder","type","value","onChange","target","split","every","char","includes","toLowerCase","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9ef5cb5.chunk.js","sourcesContent":["import { User } from '../../types';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && (\n        <UserInfo user={todo.user} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../../types';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\n\nimport { Todo, User } from './types';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst titlePattern = ' '\n  + '0123456789'\n  + 'abcdefghijklmnopqrstuvwxyz'\n  + 'абвгґдеєжзиіїйклмнопрстуфхцчшщьюя';\n\nconst generateNewId = (todos: Todo[]): number => {\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  return maxId + 1;\n};\n\nconst getUserById = (userIdToFind: number): User | undefined => {\n  return usersFromServer.find(user => user.id === userIdToFind);\n};\n\nconst todosWithUser: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosWithUser);\n\n  const [newTitle, setNewTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState(0);\n\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const normalizedTitle = newTitle.trim();\n\n    if (!normalizedTitle) {\n      setHasTitleError(true);\n      setNewTitle('');\n    }\n\n    if (!selectedUserId) {\n      setHasUserError(true);\n    }\n\n    if (!normalizedTitle || !selectedUserId) {\n      return;\n    }\n\n    setTodos(currentTodos => {\n      const newTodo: Todo = {\n        id: generateNewId(currentTodos),\n        title: normalizedTitle,\n        completed: false,\n        userId: selectedUserId,\n        user: getUserById(selectedUserId),\n      };\n\n      return [...currentTodos, newTodo];\n    });\n\n    setNewTitle('');\n    setSelectedUserId(0);\n  };\n\n  const handleTitleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const isValid = event.target.value\n      .split('')\n      .every(char => titlePattern.includes(char.toLowerCase()));\n\n    if (isValid) {\n      setNewTitle(event.target.value);\n      setHasTitleError(false);\n    }\n  };\n\n  const handleUserSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+event.target.value);\n    setHasUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title: </label>\n          <input\n            id=\"titleInput\"\n            placeholder=\"Enter a title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={newTitle}\n            onChange={handleTitleInput}\n          />\n\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n          <select\n            id=\"userSelect\"\n            data-cy=\"userSelect\"\n            value={selectedUserId}\n            onChange={handleUserSelect}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}